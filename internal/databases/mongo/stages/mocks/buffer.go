// Code generated by Yandex patched mockery v1.1.0. DO NOT EDIT.

package stagesmocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// Buffer is an autogenerated mock type for the Buffer type
type Buffer struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Buffer) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Len provides a mock function with given fields:
func (_m *Buffer) Len() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Reader provides a mock function with given fields:
func (_m *Buffer) Reader() (io.Reader, error) {
	ret := _m.Called()

	if len(ret) == 1 {
		rf, ok := ret.Get(0).(func() (io.Reader, error))
		if ok {
			return rf()
		}
	}

	var r0 io.Reader
	if rf, ok := ret.Get(0).(func() io.Reader); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.Reader)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Reset provides a mock function with given fields:
func (_m *Buffer) Reset() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Write provides a mock function with given fields: p
func (_m *Buffer) Write(p []byte) (int, error) {
	ret := _m.Called(p)

	if len(ret) == 1 {
		rf, ok := ret.Get(0).(func([]byte) (int, error))
		if ok {
			return rf(p)
		}
	}

	var r0 int
	if rf, ok := ret.Get(0).(func([]byte) int); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(p)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
